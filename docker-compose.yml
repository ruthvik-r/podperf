version: '3'

services:
  app:
    build:
      context: ./app
    container_name: podperf_app
    ports:
      - "8080:8080"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    volumes:
      - app-logs:/var/log/app
    depends_on:
      - fluent-bit
      - otel-collector
    restart: unless-stopped
    networks:
      - podperf-network

  fluent-bit:
    image: fluent/fluent-bit:latest
    container_name: podperf_fluent_bit
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "2020:2020"
    volumes:
      - ./fluent-bit/conf:/fluent-bit/etc
      - app-logs:/var/log/app:ro
    environment:
      - TZ=UTC
    depends_on:
      - opensearch
    restart: unless-stopped
    networks:
      - podperf-network

  prometheus:
    image: prom/prometheus:latest
    container_name: podperf_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - podperf-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - podperf-network

  opensearch:
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=podperf-cluster
      - node.name=podperf-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    restart: unless-stopped
    networks:
      - podperf-network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      - opensearch
    restart: unless-stopped
    networks:
      - podperf-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: podperf_otel_collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPCreceiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by collector
      - "8889:8889"   # Prome exporter metrics
      - "13133:13133" # Health check
    depends_on:
      - zipkin
    restart: unless-stopped
    networks:
      - podperf-network

  # Zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: podperf_zipkin
    ports:
      - "9411:9411"   # UI
    restart: unless-stopped
    networks:
      - podperf-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - podperf-network

networks:
  podperf-network:
    driver: bridge

volumes:
  opensearch-data:
  prometheus-data:
  grafana-data:
  app-logs: 